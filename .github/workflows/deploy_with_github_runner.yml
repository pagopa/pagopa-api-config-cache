name: Deploy on AKS

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: string
      target:
        required: true
        description: The environment target of the job
        type: string
      pagopa_release:
        required: true
        type: string
        description: release version to deploy for PagoPA microservice
      pagopa_force:
        required: false
        type: boolean
        description: force re-deploy PagoPA microservice
        default: false
      nexi_release:
        required: true
        type: string
        description: release version to deploy for Nexi microservice
      nexi_force:
        required: false
        type: boolean
        description: force re-deploy Nexi microservice
        default: false
      current_release:
        required: true
        type: string
        description: release version of the current deploy

env:
  APP_NAME: cache

permissions:
  id-token: write
  contents: read

jobs:
  setting_env:
    name: Setting Environment
    runs-on: ubuntu-22.04
    if: ${{ inputs.target == inputs.environment }}
    outputs:
      environment: ${{ steps.get_env.outputs.environment }}
    steps:
      - name: Get Environment
        id: get_env
        shell: bash
        run: |         
          current_env="${{ inputs.environment }}"
          echo "environment=$current_env" >> $GITHUB_OUTPUT

      - name: Get Releases
        id: get_releases
        shell: bash
        run: |
          pagopa_version=${{ inputs.current_release }}
          nexi_version=${{ inputs.current_release }}
          
          if [[ "${{ inputs.nexi_release }}" != "" ]]; then            
            nexi_version=${{ inputs.nexi_release }}
          fi
          
          if [[ "${{ inputs.pagopa_release }}" != "" ]]; then            
            pagopa_version=${{ inputs.pagopa_release }}
          fi
          
          echo "pagopa_rel=$pagopa_version" >> $GITHUB_OUTPUT
          echo "nexi_rel=$nexi_version" >> $GITHUB_OUTPUT

  create_runner:
    needs: [ setting_env ]
    name: Create Runner
    runs-on: ubuntu-22.04
    environment:
      name: ${{ needs.setting_env.outputs.environment }}
    if: ${{ inputs.target == inputs.environment }}
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        # from https://github.com/pagopa/eng-github-actions-iac-template/tree/main/azure/github-self-hosted-runner-azure-create-action
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-create-action@main
        with:
          client_id: ${{ secrets.CD_CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_RESOURCE_GROUP_NAME }} # RG of the runner
          pat_token: ${{ secrets.BOT_TOKEN_GITHUB }}
          self_hosted_runner_image_tag: "latest"

  deploy:
    needs: [ setting_env, create_runner ]
    runs-on: [ self-hosted, "${{ needs.create_runner.outputs.runner_name }}" ]
    if: ${{ inputs.target == inputs.environment }}
    name: Deploy on AKS
    environment: ${{ needs.setting_env.outputs.environment }}
    steps:

      - name: Deploy DEV
        uses: pagopa/github-actions-template/aks-deploy@5db4c9108164a07d96527978da1c3febec934f22 #v1.11.1
        if: ${{ inputs.environment == 'dev' }}
        with:
          branch: ${{ github.ref_name }}
          client_id: ${{ secrets.CD_CLIENT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          env: ${{ needs.setting_env.outputs.environment }}
          namespace: ${{ vars.NAMESPACE }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          app_name: ${{ env.APP_NAME }}
          helm_upgrade_options: ' --debug --set postgresql.forceRedeploy=${{ inputs.pagopa_force }} --set postgresql.image.tag=${{ needs.setting_env.get_releases.pagopa_rel }} --set postgresql-nexi.forceRedeploy=${{ inputs.nexi_force }} --set postgresql-nexi.image.tag=${{ needs.setting_env.get_releases.nexi_rel }}'

      - name: Deploy UAT
        uses: pagopa/github-actions-template/aks-deploy@5db4c9108164a07d96527978da1c3febec934f22 #v1.11.1
        if: ${{ inputs.environment == 'uat' }}
        with:
          branch: ${{ github.ref_name }}
          client_id: ${{ secrets.CD_CLIENT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          env: ${{ needs.setting_env.outputs.environment }}
          namespace: ${{ vars.NAMESPACE }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          app_name: ${{ env.APP_NAME }}
          helm_upgrade_options: ' --debug --set postgresql.forceRedeploy=${{ inputs.pagopa_force }} --set postgresql.image.tag=${{ needs.setting_env.get_releases.pagopa_rel }} --set postgresql-replica.forceRedeploy=${{ inputs.pagopa_force }} --set postgresql-replica.image.tag=${{ needs.setting_env.get_releases.pagopa_rel }} --set postgresql-nexi.forceRedeploy=${{ inputs.nexi_force }} --set postgresql-nexi.image.tag=${{ needs.setting_env.get_releases.nexi_rel }} --set postgresql-replica-nexi.forceRedeploy=${{ inputs.nexi_force }} --set postgresql-replica-nexi.image.tag=${{ needs.setting_env.get_releases.nexi_rel }}'

      - name: Deploy PROD
        uses: pagopa/github-actions-template/aks-deploy@5db4c9108164a07d96527978da1c3febec934f22 #v1.11.1
        if: ${{ inputs.environment == 'prod' }}
        with:
          branch: ${{ github.ref_name }}
          client_id: ${{ secrets.CD_CLIENT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          env: ${{ needs.setting_env.outputs.environment }}
          namespace: ${{ vars.NAMESPACE }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          app_name: ${{ env.APP_NAME }}
          helm_upgrade_options: '--debug --set postgresql.forceRedeploy=${{ inputs.pagopa_force }} --set postgresql.image.tag=${{ needs.setting_env.get_releases.pagopa_rel }}'

  cleanup_runner:
    name: Cleanup Runner
    needs: [ setting_env, create_runner, deploy ]
    if: ${{ success() || failure() && inputs.target == inputs.environment }}
    runs-on: ubuntu-22.04
    environment: ${{ needs.setting_env.outputs.environment }}
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        # from https://github.com/pagopa/eng-github-actions-iac-template/tree/main/azure/github-self-hosted-runner-azure-cleanup-action
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-cleanup-action@0ee2f58fd46d10ac7f00bce4304b98db3dbdbe9a
        with:
          client_id: ${{ secrets.CD_CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          resource_group_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.BOT_TOKEN_GITHUB }}

  update_openapi:
    needs: [ setting_env, deploy ]
    runs-on: ubuntu-latest
    name: Update OpenAPI
    if: ${{ inputs.target == inputs.environment }}
    environment: ${{ needs.setting_env.outputs.environment }}
    steps:
      - name: Checkout
        id: checkout
        # from https://github.com/actions/checkout/commits/main
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b #v4.1.4
        with:
          persist-credentials: false

      - name: Read current terraform version
        run: |
          VER=$(cat .terraform-version)
          echo "TERRAFORM_VERSION=$VER" >> $GITHUB_ENV

      - name: Setup Terraform
        # from https://github.com/hashicorp/setup-terraform/commits/main
        uses: hashicorp/setup-terraform@97f030cf6dc0b4f5e0da352c7bca9cca34579800 #v3.1.0
        with:
          terraform_version: "${{ env.TERRAFORM_VERSION }}"

      - name: Apply terraform.sh
        uses: pagopa/eng-github-actions-iac-template/azure/terraform-sh-apply-azure-action@ae723dfbdc457ffa6b4acd99f2444fc08c1efb85 #v1.11.0
        with:
          client_id: "${{ secrets.CD_CLIENT_ID }}"
          tenant_id: "${{ secrets.TENANT_ID }}"
          subscription_id: "${{ secrets.SUBSCRIPTION_ID }}"
          tf_environment: "weu-${{ needs.setting_env.outputs.environment }}"
          dir: "infra"
