name: Deploy on AKS

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: string
      force_deploy:
        required: false
        type: boolean
        description: force re-deploy microservice
        default: false
      branch:
        required: false
        default: ${{ github.ref_name }}
        type: string

env:
  APP_NAME: cache

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: [ self-hosted-job, "${{ inputs.environment }}" ]
    name: Deploy on AKS
    environment: ${{ inputs.environment }}
    steps:
      - name: Deploy
        # from https://github.com/pagopa/github-actions-template/commit/main
        uses: pagopa/github-actions-template/aks-deploy@525266fb788f4da438e5919fcf660fe8637271ed
        if: ${{ contains(inputs.environment, 'uat') }}
        with:
          branch: ${{ inputs.branch }}
          client_id: ${{ secrets.CLIENT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          env: ${{ inputs.environment }}
          namespace: ${{ vars.NAMESPACE }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          app_name: ${{ env.APP_NAME }}
          helm_upgrade_options: ' --debug 
            --set postgresql.forceRedeploy=${{ inputs.force_deploy }}
            --set microservice-chart.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} 
            --set refresh-p.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}}
            --set refresh-p-replica.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}}
            --set postgresql.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} 
            --set postgresql-replica.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} '
          timeout: '5m0s'
      - name: Deploy
        if: ${{ !contains(inputs.environment, 'uat') }}
        # from https://github.com/pagopa/github-actions-template/commit/main
        uses: pagopa/github-actions-template/aks-deploy@525266fb788f4da438e5919fcf660fe8637271ed
        with:
          branch: ${{ inputs.branch }}
          client_id: ${{ secrets.CLIENT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          env: ${{ inputs.environment }}
          namespace: ${{ vars.NAMESPACE }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          app_name: ${{ env.APP_NAME }}
          helm_upgrade_options: ' --debug 
            --set postgresql.forceRedeploy=${{ inputs.force_deploy }}
            --set microservice-chart.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} 
            --set refresh-p.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}}
            --set postgresql.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} '
          timeout: '5m0s'

  update_openapi:
    needs: [ deploy ]
    runs-on: ubuntu-latest
    name: Update OpenAPI
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        id: checkout
        # from https://github.com/actions/checkout/commits/main
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b #v4.1.4
        with:
          persist-credentials: false

      - name: Read current terraform version
        run: |
          VER=$(cat .terraform-version)
          echo "TERRAFORM_VERSION=$VER" >> $GITHUB_ENV

      - name: Setup Terraform
        # from https://github.com/hashicorp/setup-terraform/commits/main
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd #v3.1.2
        with:
#          terraform_version: "${{ env.TERRAFORM_VERSION }}"
          terraform_version: "1.10.4"

      - name: Apply terraform.sh
        uses: pagopa/eng-github-actions-iac-template/azure/terraform-sh-apply-azure-action@159289e1e23d0783533d1dd83e1b7cf0a5a565d9 #v1.24.0
        with:
          client_id: "${{ secrets.CLIENT_ID }}"
          tenant_id: "${{ secrets.TENANT_ID }}"
          subscription_id: "${{ secrets.SUBSCRIPTION_ID }}"
          tf_environment: "weu-${{ inputs.environment }}"
          dir: "infra"
