basecache: &basecache
  namespace: "apiconfig"
  nameOverride: ""
  fullnameOverride: ""
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  image:
    repository: pagopadcommonacr.azurecr.io/pagopaapiconfigcache
    tag: "0.0.1"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    port: 8080
  ingress: &ingress
    create: true
    host: "weuuat.apiconfig.internal.uat.platform.pagopa.it"
    path: /api-config-cache(/|$)(.*)
    pathType: Prefix
    servicePort: 8080
    rewriteTarget: /$2
  serviceAccount:
    create: false
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "2G"
      cpu: "1"
  envConfig: &envConfig
    AZURE_INSIGHTS_ENABLED: "true"
    REDIS_HOST: "pagopa-u-redis.redis.cache.windows.net"
    REDIS_PORT: "6380"
  envSecret: &envSecret
    # required
    APPLICATIONINSIGHTS_CONNECTION_STRING: "ai-u-connection-string"
    REDIS_PWD: "redis-password"
  keyvault:
    name: "pagopa-u-apiconfig-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
# Configuration used to update image tag
microservice-chart:
  !!merge <<: *basecache
postgresql:
  !!merge <<: *basecache
  ingress:
    !!merge <<: *ingress
    path: /api-config-cache/p(/|$)(.*)
  envConfig:
    !!merge <<: *envConfig
    APPLICATIONINSIGHTS_ROLE_NAME: "pagopa-api-cache-postgresql-replica"
    DB_CONFIG_URL: "jdbc:postgresql://pagopa-u-weu-nodo-flexible-postgresql.postgres.database.azure.com:6432/nodo-replica?sslmode=require&prepareThreshold=0&currentSchema=cfg"
    DB_CONFIG_USER: "cfg"
    DB_CONFIG_DRIVER: "org.postgresql.Driver"
    DATABASE_ID: "p_replica"
  envSecret:
    !!merge <<: *envSecret
    DB_CONFIG_PASSWORD: "postgresql-db-cfg-password"
oracle:
  !!merge <<: *basecache
  ingress:
    !!merge <<: *ingress
    path: /api-config-cache/o(/|$)(.*)
  envConfig:
    !!merge <<: *envConfig
    APPLICATIONINSIGHTS_ROLE_NAME: "pagopa-api-cache-oracle-replica"
    DB_CONFIG_URL: "jdbc:oracle:thin:@db-nodo-pagamenti.d.db-nodo-pagamenti.com:1522/NDPSPCT_PP_NODO4_CFG"
    DB_CONFIG_USER: "NODO4_CFG"
    DB_CONFIG_DRIVER: "oracle.jdbc.OracleDriver"
    DATABASE_ID: "o_replica"
  envSecret:
    !!merge <<: *envSecret
    DB_CONFIG_PASSWORD: "oracle-db-cfg-password"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user