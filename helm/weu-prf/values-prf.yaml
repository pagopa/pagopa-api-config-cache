basecache: &basecache
  namespace: "apiconfig"
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 30
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 30
  deployment:
    create: true
    replicas: 1 # default
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
  ingress: &ingress
    create: true
    host: "weuuat.apiconfig.internal.uat.platform.pagopa.it"
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "2G"
      cpu: "1"
  envConfig: &envConfig
    AZURE_INSIGHTS_ENABLED: "true"
    REDIS_PORT: "6380"
  secretProvider: &azureSecretProvider
    create: true
    envSecrets: &envSecret
      APPLICATIONINSIGHTS_CONNECTION_STRING: "ai-u-connection-string"
      REDIS_PWD: "redis-password"
      REDIS_HOST: "redis-hostname"
    keyvault:
      name: "pagopa-u-apiconfig-kv"
      tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  tmpVolumeMount:
    create: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
# Configuration used to update image tag
postgresql:
  !!merge <<: *basecache
  image:
    repository: ghcr.io/pagopa/pagopa-api-config-cache
    tag: "0.6.0"
  ingress:
    !!merge <<: *ingress
    path: /api-config-cache/pr(/|$)(.*)
  envConfig:
    !!merge <<: *envConfig
    APPLICATIONINSIGHTS_ROLE_NAME: "pagopa-api-config-cache-postgresql"
    DB_CONFIG_URL: "jdbc:postgresql://pagopa-u-weu-nodo-flexible-postgresql.postgres.database.azure.com:6432/nodo-replica?sslmode=require&prepareThreshold=0&currentSchema=cfg"
    DB_CONFIG_USER: "cfg"
    DB_CONFIG_DRIVER: "org.postgresql.Driver"
    DATABASE_ID: "pr"
    HEALTHCHECK_QUERY: "select 1"
  secretProvider:
    !!merge <<: *azureSecretProvider
    envSecrets:
      !!merge <<: *envSecret
      DB_CONFIG_PASSWORD: "postgresql-db-cfg-password"
oracle:
  !!merge <<: *basecache
  image:
    repository: ghcr.io/pagopa/pagopa-api-config-cache
    tag: "0.6.0-2-NOD-378-out-of-memory"
  ingress:
    !!merge <<: *ingress
    path: /api-config-cache/or(/|$)(.*)
  envConfig:
    !!merge <<: *envConfig
    APPLICATIONINSIGHTS_ROLE_NAME: "pagopa-api-config-cache-oracle"
    DB_CONFIG_URL: "jdbc:oracle:thin:@db-nodo-pagamenti-prf.u.db-nodo-pagamenti.com:1524/NDPSPCST_NODO4_CFG"
    DB_CONFIG_USER: "NODO4_CFG"
    DB_CONFIG_DRIVER: "oracle.jdbc.OracleDriver"
    JAVA_OPTS: "-Dspring.jpa.show-sql=false"
    DATABASE_ID: "or"
    HEALTHCHECK_QUERY: "select 1 from dual"
    SAVE_DB: "true"
  secretProvider:
    !!merge <<: *azureSecretProvider
    envSecrets:
      !!merge <<: *envSecret
      DB_CONFIG_PASSWORD: "oracle-db-cfg-prf-password"
oracledev:
  enabled: false
oracleprod:
  enabled: false
