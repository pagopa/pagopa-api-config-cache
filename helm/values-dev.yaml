microservice-chart:
  namespace: "nodo"
  nameOverride: ""
  fullnameOverride: ""
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  image:
    repository: pagopadcommonacr.azurecr.io/pagopaapiconfigcache
    tag: "0.0.1"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    port: 8080
  ingress:
    create: true
    host: "weudev.nodo.internal.dev.platform.pagopa.it"
    path: /api-config-cache(/|$)(.*)
    pathType: Prefix
    servicePort: 8080
    rewriteTarget: /$2
  serviceAccount:
    create: false
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "2G"
      cpu: "1"
  envConfig:
    DB_CONFIG_URL: "jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql.postgres.database.azure.com:6432/nodo?sslmode=require&prepareThreshold=0&currentSchema=cfg"
    DB_CONFIG_USER: "cfg"
    REDIS_HOST: "rediss://pagopa-d-redis.redis.cache.windows.net"
    REDIS_PORT: "6380"
    REDIS_PWD: "todo-from-secret"
  envSecret:
    # required
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'azure-insight-connection-string'
    DB_CONFIG_PASSWORD: "db-cfg-password"
  keyvault:
    name: "pagopa-d-nodo-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
